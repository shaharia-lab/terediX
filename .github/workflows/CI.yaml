name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:

  build:
    name: Build Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go ^1.20
        uses: actions/setup-go@v3
        with:
          go-version: '^1.20'

      - name: Build
        run: make build

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: teredix-binary-${GITHUB_SHA}
          path: build/teredix

  lint:
    name: Linting
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: write  # for golangci/golangci-lint-action to fetch pull requests
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.20'
          check-latest: true
          cache: true

      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate_json_schema:
    name: Test & Validate JSON schema
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: teredix-binary-${GITHUB_SHA}
          path: build/teredix
      - name: Run configuration validation against JSON schema
        run: |
          ./build/teredix validate --config ./pkg/cmd/testdata/valid_config.yaml
          ./build/teredix validate --config ./pkg/config/testdata/valid_config.yaml
    needs:
      - build

  test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go ^1.20
        uses: actions/setup-go@v3
        with:
          go-version: '^1.20'

      - name: Test
        run: make testc

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage.out
          path: coverage.out

  sonarcloud-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: coverage.out

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
