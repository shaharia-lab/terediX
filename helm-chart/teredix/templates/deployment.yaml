apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "teredix.fullname" . }}
  labels:
    {{- include "teredix.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "teredix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "teredix.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "teredix.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/usr/local/bin/teredix"]
          args: ["discover", "--config", "/config/config.yaml"]
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          volumeMounts:
              - name: appconfig-volume
                mountPath: /config
          ports:
            - name: http
              containerPort: {{ .Values.apiService.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: appconfig-volume
          configMap:
            name: {{ .Release.Name }}-configmap-volume
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
