"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6404],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9976:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={title:"AWS EC2"},o="AWS EC2",c={unversionedId:"configuration/scanner/aws_ec2",id:"configuration/scanner/aws_ec2",title:"AWS EC2",description:"Configuration",source:"@site/docs/configuration/scanner/aws_ec2.md",sourceDirName:"configuration/scanner",slug:"/configuration/scanner/aws_ec2",permalink:"/docs/configuration/scanner/aws_ec2",draft:!1,editUrl:"https://github.com/shaharia-lab/teredix/tree/master/website/docs/configuration/scanner/aws_ec2.md",tags:[],version:"current",lastUpdatedAt:1696875037,formattedLastUpdatedAt:"Oct 9, 2023",frontMatter:{title:"AWS EC2"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/configuration/scanner/overview"},next:{title:"AWS ECR",permalink:"/docs/configuration/scanner/aws_ecr"}},l={},s=[{value:"Configuration",id:"configuration",level:2},{value:"Type",id:"type",level:3},{value:"Configuration",id:"configuration-1",level:3},{value:"Fields",id:"fields",level:3},{value:"Schedule",id:"schedule",level:3},{value:"Example",id:"example",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"aws-ec2"},"AWS EC2"),(0,r.kt)("img",{src:"/img/aws_ec2_icon.png",alt:"AWS EC2",width:"250"}),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("p",null,"Resource type. In this case it would be ",(0,r.kt)("inlineCode",{parentName:"p"},"aws_ec2"),"."),(0,r.kt)("h3",{id:"configuration-1"},"Configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"access_key"),": AWS access key"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"secret_key"),": AWS secret key"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"region"),": AWS region. e.g: us-west-1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"session_token"),": AWS session token"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"account_id"),": AWS account ID")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("p",null,"List of available fields to add with resource add metadata. During scanning resources, scanner will only fetch data\nfrom the following fields."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"instance_id"),(0,r.kt)("li",{parentName:"ul"},"image_id"),(0,r.kt)("li",{parentName:"ul"},"private_dns_name"),(0,r.kt)("li",{parentName:"ul"},"instance_type"),(0,r.kt)("li",{parentName:"ul"},"architecture"),(0,r.kt)("li",{parentName:"ul"},"instance_lifecycle"),(0,r.kt)("li",{parentName:"ul"},"instance_state"),(0,r.kt)("li",{parentName:"ul"},"vpc_id"),(0,r.kt)("li",{parentName:"ul"},"tags")),(0,r.kt)("h3",{id:"schedule"},"Schedule"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\ud83d\udd17 ",(0,r.kt)("a",{parentName:"strong",href:"/docs/configuration/scanner/overview#schedule-format"},"Check schedule format")),"."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'source:\n  aws_ec2_source_one:\n      type: aws_ec2\n      configuration:\n        access_key: "xxxx"\n        secret_key: "xxxx"\n        session_token: "xxxx"\n        region: "x"\n        account_id: "xxx"\n      fields:\n        - instance_id\n        - image_id\n        - private_dns_name\n        - instance_type\n        - architecture\n        - instance_lifecycle\n        - instance_state\n        - vpc_id\n        - tags\n      schedule: "@every 24h"\n')),(0,r.kt)("p",null,"In the above example, we have added a source named ",(0,r.kt)("inlineCode",{parentName:"p"},"aws_ec2_source_one")," with type ",(0,r.kt)("inlineCode",{parentName:"p"},"aws_ec2"),". We have added some fields to add with each resource.\nWe have also set the schedule to run this source every 24 hours."),(0,r.kt)("p",null,"Based on the above example, scanner_name would be ",(0,r.kt)("inlineCode",{parentName:"p"},"aws_ec2_source_one")," and scanner_type would be ",(0,r.kt)("inlineCode",{parentName:"p"},"aws_ec2"),". This is\nimportant to filter resources in Grafana dashboard."))}d.isMDXComponent=!0}}]);