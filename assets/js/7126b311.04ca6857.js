"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5054],{21830:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var r=i(85893),o=i(11151);const t={title:"Configure GitHub Repository Resource Scanner for TerediX",sidebar_label:"GitHub Repository"},s="GitHub Repository",a={id:"configuration/scanner/github_repository",title:"Configure GitHub Repository Resource Scanner for TerediX",description:"Configuration",source:"@site/docs/configuration/scanner/github_repository.md",sourceDirName:"configuration/scanner",slug:"/configuration/scanner/github_repository",permalink:"/docs/configuration/scanner/github_repository",draft:!1,unlisted:!1,editUrl:"https://github.com/shaharia-lab/teredix/tree/master/website/docs/configuration/scanner/github_repository.md",tags:[],version:"current",lastUpdatedAt:1713134108,formattedLastUpdatedAt:"Apr 14, 2024",frontMatter:{title:"Configure GitHub Repository Resource Scanner for TerediX",sidebar_label:"GitHub Repository"},sidebar:"tutorialSidebar",previous:{title:"File System",permalink:"/docs/configuration/scanner/file_system"},next:{title:"Installation",permalink:"/docs/category/installation"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Type",id:"type",level:3},{value:"Configuration",id:"configuration-1",level:3},{value:"Fields",id:"fields",level:3},{value:"Schedule",id:"schedule",level:3},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"github-repository",children:"GitHub Repository"}),"\n",(0,r.jsx)("img",{src:"/img/github_repository_icon.png",alt:"GitHub Repository",width:"250"}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,r.jsxs)(n.p,{children:["Resource type. In this case it would be ",(0,r.jsx)(n.code,{children:"github_repository"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"user_or_org"}),": User or organization username of GitHub."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"token"}),": GitHub access token"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(n.p,{children:"List of available fields to add with resource add metadata. During scanning resources, scanner will only fetch data\nfrom the following fields."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"company"}),"\n",(0,r.jsx)(n.li,{children:"homepage"}),"\n",(0,r.jsx)(n.li,{children:"language"}),"\n",(0,r.jsx)(n.li,{children:"organization"}),"\n",(0,r.jsx)(n.li,{children:"stars"}),"\n",(0,r.jsx)(n.li,{children:"git_url"}),"\n",(0,r.jsx)(n.li,{children:"owner_login"}),"\n",(0,r.jsx)(n.li,{children:"owner_name"}),"\n",(0,r.jsx)(n.li,{children:"topics"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"schedule",children:"Schedule"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["\ud83d\udd17 ",(0,r.jsx)(n.a,{href:"/docs/configuration/scanner/overview#schedule-format",children:"Check schedule format"})]}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'source:\n  github_repository_source_one:\n      type: github_repository\n      configuration:\n        user_or_org: "some_org"\n        token: "token"\n      fields:\n        - company\n        - homepage\n        - language\n        - organization\n        - stars\n        - git_url\n        - owner_login\n        - owner_name\n        - topics\n      schedule: "@every 24h"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In the above example, we have added a source named ",(0,r.jsx)(n.code,{children:"github_repository_source_one"})," with type ",(0,r.jsx)(n.code,{children:"github_repository"}),". We have added some fields to add with each resource.\nWe have also set the schedule to run this source every 24 hours."]}),"\n",(0,r.jsxs)(n.p,{children:["Based on the above example, scanner_name would be ",(0,r.jsx)(n.code,{children:"github_repository_source_one"})," and scanner_type would be ",(0,r.jsx)(n.code,{children:"github_repository"}),". This is\nimportant to filter resources in Grafana dashboard."]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var r=i(67294);const o={},t=r.createContext(o);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);