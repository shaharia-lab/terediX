// Code generated by mockery v2.15.0. DO NOT EDIT.

package storage

import (
	"github.com/stretchr/testify/mock"
	"infrastructure-discovery/pkg/resource"
)

// StorageMock is an autogenerated mock type for the StorageMock type
type StorageMock struct {
	mock.Mock
}

// Find provides a mock function with given fields: filter
func (_m *StorageMock) Find(filter ResourceFilter) ([]resource.Resource, error) {
	ret := _m.Called(filter)

	var r0 []resource.Resource
	if rf, ok := ret.Get(0).(func(ResourceFilter) []resource.Resource); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]resource.Resource)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ResourceFilter) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Persist provides a mock function with given fields: resources
func (_m *StorageMock) Persist(resources []resource.Resource) error {
	ret := _m.Called(resources)

	var r0 error
	if rf, ok := ret.Get(0).(func([]resource.Resource) error); ok {
		r0 = rf(resources)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Prepare provides a mock function with given fields:
func (_m *StorageMock) Prepare() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
